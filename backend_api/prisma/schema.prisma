// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Work {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  projectLink String?
  codeLink    String?
  imgUrl      String? @db.Text
  tags        String? @db.Text // JSON array as string

  // Content Management
  isPublished  Boolean @default(false)
  isDraft      Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Enhanced Metadata
  category  String? // e.g., "Research", "Professional", "Personal"
  techStack String? @db.Text // JSON array of technologies
  impact    String? @db.Text // Metrics, outcomes, achievements
  duration  String? // e.g., "6 months", "2023-2024"
  role      String? // Your role in the project

  // SEO & Discovery
  slug      String? @unique
  metaTitle String?
  metaDesc  String? @db.Text
  keywords  String? @db.Text // JSON array

  // Engagement
  views Int @default(0)
  likes Int @default(0)

  // Timestamps
  publishedAt DateTime?
  featuredAt  DateTime?
  deletedAt   DateTime? // Soft delete
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([slug])
  @@index([deletedAt])
  @@map("works")
}

model About {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  imgUrl      String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Professional Profile Enhancement
  sectionType  String? // "research", "leadership", "teaching", "innovation"
  icon         String? // Icon identifier
  metrics      String? @db.Text // JSON: {"publications": 15, "projects": 30}
  tags         String? @db.Text // JSON: Research interests, expertise areas
  competencies String? @db.Text // JSON array of key competencies

  // Rich Content
  detailedDesc String? @db.LongText // Extended description
  achievements String? @db.Text // JSON array of achievements

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([sectionType])
  @@index([deletedAt])
  @@map("abouts")
}

model Skill {
  id      String  @id @default(uuid())
  name    String
  bgColor String?
  icon    String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Expertise Enhancement
  category         String? // "Programming", "Framework", "Database", "Cloud", "Tool"
  proficiencyLevel Int      @default(0) // 0-100 percentage
  yearsExperience  Decimal? @db.Decimal(3, 1) // e.g., 5.5 years

  // Context & Usage
  description    String?   @db.Text
  projectsUsed   String?   @db.Text // JSON array of project IDs/names
  certifications String?   @db.Text // JSON array of related certs
  lastUsed       DateTime? // When you last used this skill

  // Learning Path
  learningSource String? // How you learned it
  endorsements   Int     @default(0)

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([category])
  @@index([proficiencyLevel])
  @@index([deletedAt])
  @@map("skills")
}

model Experience {
  id    String  @id @default(uuid())
  year  String
  works String? @db.Text // JSON array as string

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Timeline Enhancement
  startDate DateTime?
  endDate   DateTime?
  isCurrent Boolean   @default(false)

  // Rich Context
  period       String? // "2023-2024", "Spring 2023"
  category     String? // "professional", "academic", "research"
  summary      String? @db.Text
  achievements String? @db.Text // JSON array

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([year])
  @@index([startDate, endDate])
  @@index([deletedAt])
  @@map("experiences")
}

model WorkExperience {
  id      String  @id @default(uuid())
  name    String
  company String?
  desc    String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Professional Details
  position       String? // Job title/role
  location       String? // City, Country or "Remote"
  employmentType String? // "Full-time", "Contract", "Internship"

  // Timeline
  startDate DateTime?
  endDate   DateTime?
  isCurrent Boolean   @default(false)
  duration  String? // "2 years 3 months"

  // Rich Content
  responsibilities String? @db.Text // JSON array
  achievements     String? @db.Text // JSON array
  technologies     String? @db.Text // JSON array
  teamSize         Int?

  // Links & Media
  companyUrl  String?
  companyLogo String? @db.Text

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([company])
  @@index([startDate, endDate])
  @@index([deletedAt])
  @@map("workExperiences")
}

model Brand {
  id     String  @id @default(uuid())
  name   String
  imgUrl String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Brand Details
  category    String? // "Partner", "Client", "Collaboration", "Certification"
  description String? @db.Text
  website     String?

  // Relationship
  relationship String? // Nature of partnership
  startDate    DateTime?
  endDate      DateTime?

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([category])
  @@index([deletedAt])
  @@map("brands")
}

model Award {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  date        String?
  imgUrl      String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Award Details
  category   String? // "Academic", "Professional", "Research", "Leadership"
  issuer     String? // Organization that issued the award
  issuerLogo String? @db.Text

  // Recognition Level
  level     String? // "International", "National", "Regional", "Institutional"
  year      Int?
  awardDate DateTime?

  // Rich Content
  criteria     String? @db.Text // What it was for
  significance String? @db.Text // Why it matters
  link         String? // Verification link

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([category])
  @@index([year])
  @@index([deletedAt])
  @@map("awards")
}

model Contact {
  id      String @id @default(uuid())
  name    String
  email   String
  message String @db.Text

  // Status Management
  isRead    Boolean @default(false)
  isReplied Boolean @default(false)
  status    String? @default("new") // "new", "in-progress", "resolved"

  // Categorization
  category String? // "job", "collaboration", "inquiry", "feedback"
  priority String? @default("normal") // "low", "normal", "high", "urgent"

  // Response
  reply     String?   @db.Text
  repliedAt DateTime?
  notes     String?   @db.Text // Internal notes

  // Timestamps
  createdAt DateTime @default(now())

  @@index([isRead, status])
  @@index([category])
  @@index([createdAt])
  @@map("contacts")
}

model Resume {
  id          String  @id @default(uuid())
  title       String // Resume title/name
  description String? @db.Text
  fileUrl     String? // URL to the uploaded PDF file
  fileName    String? // Original filename

  // Content Management
  isActive     Boolean @default(false) // Mark which resume is currently active
  isPublished  Boolean @default(false)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Resume Targeting
  targetType String? // "Academic", "Industry", "Research", "General"
  keywords   String? @db.Text // JSON array

  // Versions & Tracking
  version   String? // "v1.0", "v2.0"
  downloads Int     @default(0)
  views     Int     @default(0)

  // Timestamps
  uploadedAt DateTime  @default(now())
  deletedAt  DateTime? // Soft delete
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([isActive, isPublished])
  @@index([targetType])
  @@index([deletedAt])
  @@map("resumes")
}

model ResearchStatement {
  id            String  @id @default(uuid())
  title         String
  elevatorPitch String? @db.Text // 2-3 sentence summary

  // Content Management
  isPublished  Boolean @default(false)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Research Content
  currentFocus  String? @db.Text // JSON array of current research areas
  phdInterests  String? @db.Text // JSON array of PhD research interests
  longStatement String? @db.LongText // Full research statement
  researchGoals String? @db.Text // JSON array

  // Methodology & Approach
  methodology      String? @db.Text
  futureDirections String? @db.Text // JSON array

  // Documents & Links
  pdfUrl         String? // Link to full research statement PDF
  publications   String? @db.Text // JSON array of key publications
  collaborations String? @db.Text // JSON array

  // Engagement
  views     Int @default(0)
  downloads Int @default(0)

  // Timestamps
  publishedAt DateTime?
  deletedAt   DateTime? // Soft delete
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([isPublished, isFeatured])
  @@index([deletedAt])
  @@map("research_statements")
}

model Testimonial {
  id           String  @id @default(uuid())
  name         String
  position     String? // Job title
  company      String? // Organization
  relationship String? // "Supervisor", "Colleague", "Client", "Collaborator"

  // Content Management
  isPublished  Boolean @default(false)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Testimonial Content
  testimonial  String  @db.Text // The actual testimonial
  shortVersion String? @db.Text // Condensed version for cards
  context      String? @db.Text // When/where you worked together

  // Media & Verification
  avatar          String? @db.Text // Profile photo
  companyLogo     String? @db.Text
  linkedinUrl     String?
  verificationUrl String? // Link to LinkedIn recommendation, etc.

  // Rating & Category
  rating   Int? // 1-5 stars (optional)
  category String? // "Technical", "Leadership", "Research", "Collaboration"

  // Metadata
  date    DateTime? // When the testimonial was given
  project String? // Related project/context

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([category])
  @@index([relationship])
  @@index([deletedAt])
  @@map("testimonials")
}

model Publication {
  id       String  @id @default(uuid())
  title    String
  abstract String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Publication Details
  authors         String    @db.Text // JSON array
  venue           String? // Journal/Conference name
  year            Int?
  publicationDate DateTime?

  // Type & Category
  type     String? // "Journal", "Conference", "Workshop", "Preprint"
  category String? // Research area

  // Links & DOI
  doi        String?
  pdfUrl     String?
  projectUrl String?
  arxivUrl   String?

  // Metrics
  citations Int @default(0)
  views     Int @default(0)
  downloads Int @default(0)

  // Rich Content
  keywords String? @db.Text // JSON array
  bibtex   String? @db.Text
  notes    String? @db.Text

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([type, year])
  @@index([deletedAt])
  @@map("publications")
}

model Leadership {
  id           String  @id @default(uuid())
  title        String
  organization String?
  description  String? @db.Text

  // Content Management
  isPublished  Boolean @default(true)
  isFeatured   Boolean @default(false)
  displayOrder Int     @default(0)

  // Leadership Details
  role     String? // "Founder", "President", "Lead", "Mentor"
  category String? // "Entrepreneurship", "Community", "Academic", "Professional"

  // Timeline
  startDate DateTime?
  endDate   DateTime?
  isCurrent Boolean   @default(false)
  duration  String?

  // Impact & Metrics
  impact       String? @db.Text // JSON array of impact metrics
  teamSize     Int?
  achievements String? @db.Text // JSON array

  // Media
  imgUrl     String? @db.Text
  logoUrl    String? @db.Text
  websiteUrl String?

  // Rich Content
  story      String? @db.LongText // Full leadership story
  challenges String? @db.Text // JSON array
  learnings  String? @db.Text // JSON array

  // Timestamps
  deletedAt DateTime? // Soft delete
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([isPublished, isFeatured, displayOrder])
  @@index([category])
  @@index([startDate, endDate])
  @@index([deletedAt])
  @@map("leadership")
}
