/**
 * Prisma Schema Enhancement for GitHub Projects
 * This file documents the proposed changes to support GitHub project portfolio
 * Run: npx prisma migrate dev --name add_github_fields
 */

// ADDITIONS TO Work MODEL:

model Work {
    // ... existing fields ...

    // === NEW GITHUB INTEGRATION FIELDS ===

    // Repository Information
    githubUrl       String? // Full GitHub repository URL
    githubOwner     String? // Repository owner (username/org)
    githubRepo      String? // Repository name
    isPrivateRepo   Boolean @default(false) // Is this a private repository
    isGithubProject Boolean @default(false) // Is this a GitHub-sourced project

    // Repository Metrics
    githubStars    Int? // Number of stars
    githubForks    Int? // Number of forks
    githubWatchers Int? // Number of watchers
    githubIssues   Int? // Open issues count

    // Project Analysis
    projectCategory    String? // "Web Application", "Mobile", "Data Science", etc.
    projectSubCategory String? // "Frontend", "Backend", "Full-Stack", etc.
    totalFiles         Int? // Total files in project
    totalFolders       Int? // Total folders
    maxDepth           Int? // Maximum folder depth

    // Technology Stack (Enhanced - structured)
    languages       String? @db.Text // JSON array: ["JavaScript", "TypeScript"]
    frameworks      String? @db.Text // JSON array: ["React", "Next.js"]
    uiLibraries     String? @db.Text // JSON array: ["Tailwind CSS", "Material-UI"]
    databases       String? @db.Text // JSON array: ["PostgreSQL", "MongoDB"]
    testingTools    String? @db.Text // JSON array: ["Jest", "Cypress"]
    buildTools      String? @db.Text // JSON array: ["Webpack", "Vite"]
    deploymentTools String? @db.Text // JSON array: ["Docker", "Kubernetes"]

    // Project Features
    hasTests  Boolean @default(false) // Has automated tests
    hasDocs   Boolean @default(false) // Has documentation
    hasCI     Boolean @default(false) // Has CI/CD pipeline
    hasDocker Boolean @default(false) // Is Dockerized

    // Project Structure
    topLevelFolders String? @db.Text // JSON array of main folders
    keyFiles        String? @db.Text // JSON array of important files
    filesByType     String? @db.Text // JSON object: {".js": 150, ".ts": 200}

    // Insights & Analysis
    insights    String? @db.Text // JSON array of generated insights
    complexity  String? // "Simple", "Medium", "Complex", "Very Complex"
    codeQuality String? // "Excellent", "Good", "Fair", "Needs Improvement"

    // Content (Enhanced)
    readmePreview String? @db.LongText // First 1000 chars of README
    fullReadme    String? @db.LongText // Complete README content

    // Licensing
    license    String? // License name (MIT, Apache, etc.)
    licenseUrl String? // URL to license file

    // Project Timeline
    githubCreatedAt DateTime? // When repo was created on GitHub
    githubUpdatedAt DateTime? // Last update on GitHub
    lastPushedAt    DateTime? // Last push to repository

    // Repository Status
    isArchived    Boolean @default(false) // Is repository archived
    isTemplate    Boolean @default(false) // Is it a template repo
    defaultBranch String? // Default branch name

    // Collaboration
    contributors String? @db.Text // JSON array of contributor info
    topics       String? @db.Text // JSON array of GitHub topics/tags

    // External Links
    homepage      String? // Project homepage/demo URL
    documentation String? // Documentation URL

    // === INDEXES FOR NEW FIELDS ===
    @@index([isPrivateRepo])
    @@index([isGithubProject])
    @@index([projectCategory])
    @@index([githubStars])
    @@index([hasTests, hasDocs, hasCI])
    @@index([isArchived])
}

/**
 * MIGRATION STRATEGY:
 * 1. Add new fields to schema
 * 2. Run migration: npx prisma migrate dev --name add_github_fields
 * 3. Create seed script to populate from github_repositories_deep.json
 * 4. Update API routes to handle new fields
 * 5. Update frontend to display GitHub-specific information
 * SEED SCRIPT WILL:
 * - Read github_repositories_deep.json
 * - For each repository, create/update Work record
 * - Map all GitHub analysis data to Work fields
 * - Handle private repos appropriately
 * - Set display priorities based on stars, completeness, etc.
 */

/**
 * EXAMPLE WORK RECORD AFTER MIGRATION:
 * {
 * title: "next_assets",
 * description: "Full-stack asset management platform",
 * githubUrl: "https://github.com/ekddigital/next_assets",
 * githubOwner: "ekddigital",
 * githubRepo: "next_assets",
 * isPrivateRepo: true,
 * isGithubProject: true,
 * projectCategory: "Web Application",
 * projectSubCategory: "Full-Stack",
 * languages: ["TypeScript", "JavaScript"],
 * frameworks: ["React", "Next.js"],
 * uiLibraries: ["Tailwind CSS"],
 * databases: ["PostgreSQL"],
 * hasTests: true,
 * hasDocs: true,
 * totalFiles: 256,
 * insights: [
 * "Medium-sized project with 256 files",
 * "Type-safe development with TypeScript",
 * "Organized source code structure"
 * ],
 * complexity: "Medium",
 * isFeatured: true,
 * isPublished: false  // Private repo, not public
 * }
 */
